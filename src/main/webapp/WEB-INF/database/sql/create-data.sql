CREATE SCHEMA IF NOT EXISTS TEST_SCHEMA AUTHORIZATION SA;
--CREATE SEQUENCE seq_LPR;
--CREATE SEQUENCE seq_Result;
--CREATE SEQUENCE seq_Alternative;
--CREATE SEQUENCE seq_Vector;
--CREATE SEQUENCE seq_Mark;
--CREATE SEQUENCE seq_Criterion;


CREATE TABLE LPR (
    LNum INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    LName varchar2(255),
    LRange INTEGER(10)
);

CREATE TABLE Result (
    RNum INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    LNum INTEGER(19) NOT NULL,
    ANum INTEGER(19) NOT NULL,
    Range INTEGER(10),
    AWeight INTEGER(10)
);

CREATE TABLE Alternative (
    ANum INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    AName varchar2(255)
);

CREATE TABLE Vector (
    VNum INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ANum INTEGER(19) NOT NULL,
    MNum INTEGER(19) NOT NULL
);

CREATE TABLE Mark (
    MNum INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CNum INTEGER(19) NOT NULL,
    MName varchar2(255),
    MRange INTEGER(10),
    NumMark float,
    NormMark INTEGER(10)
);

CREATE TABLE Criterion (
    CNum INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY,
    CName varchar2(255),
    CRange INTEGER(10),
    CWeight INTEGER(10),
    CType varchar2(255),
    OptimType varchar2(255),
    EdIzmer varchar2(255),
    ScaleType varchar2(255)
);


ALTER TABLE Result ADD CONSTRAINT FK_LNum FOREIGN KEY (LNum) REFERENCES LPR (LNum);
ALTER TABLE Result ADD CONSTRAINT FK_ANum_R FOREIGN KEY (ANum) REFERENCES Alternative (ANum);
ALTER TABLE Vector ADD CONSTRAINT FK_ANum_V FOREIGN KEY (ANum) REFERENCES Alternative (ANum);
ALTER TABLE Vector ADD CONSTRAINT FK_MNum FOREIGN KEY (MNum) REFERENCES Mark (MNum);
ALTER TABLE Mark ADD CONSTRAINT FK_CNum FOREIGN KEY (CNum) REFERENCES Criterion (CNum);